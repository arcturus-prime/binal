use crate::{
    ir::print_instructions_simple,
    x86::{lift_block, lift_control_flow},
};

mod external;
mod ir;
mod x86;

fn main() {
    let code = [
        0x48, 0x89, 0x5c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x57, 0x48, 0x83, 0xec, 0x10,
        0x33, 0xc0, 0x33, 0xc9, 0x0f, 0xa2, 0x44, 0x8b, 0xc1, 0x45, 0x33, 0xdb, 0x44, 0x8b, 0xcb,
        0x41, 0x81, 0xf0, 0x6e, 0x74, 0x65, 0x6c, 0x41, 0x81, 0xf1, 0x47, 0x65, 0x6e, 0x75, 0x44,
        0x8b, 0xd2, 0x8b, 0xf0, 0x33, 0xc9, 0x41, 0x8d, 0x43, 0x01, 0x45, 0x0b, 0xc8, 0x0f, 0xa2,
        0x41, 0x81, 0xf2, 0x69, 0x6e, 0x65, 0x49, 0x89, 0x04, 0x24, 0x45, 0x0b, 0xca, 0x89, 0x5c,
        0x24, 0x04, 0x8b, 0xf9, 0x89, 0x4c, 0x24, 0x08, 0x89, 0x54, 0x24, 0x0c, 0x75, 0x50, 0x48,
        0x83, 0x0d, 0xf3, 0xde, 0xcb, 0x04, 0xff, 0x25, 0xf0, 0x3f, 0xff, 0x0f, 0x3d, 0xc0, 0x06,
        0x01, 0x00, 0x74, 0x28, 0x3d, 0x60, 0x06, 0x02, 0x00, 0x74, 0x21, 0x3d, 0x70, 0x06, 0x02,
        0x00, 0x74, 0x1a, 0x05, 0xb0, 0xf9, 0xfc, 0xff, 0x83, 0xf8, 0x20, 0x77, 0x24, 0x48, 0xb9,
        0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, 0x0f, 0xa3, 0xc1, 0x73, 0x14, 0x44,
        0x8b, 0x05, 0x90, 0x23, 0x0e, 0x06, 0x41, 0x83, 0xc8, 0x01, 0x44, 0x89, 0x05, 0x85, 0x23,
        0x0e, 0x06, 0xeb, 0x07, 0x44, 0x8b, 0x05, 0x7c, 0x23, 0x0e, 0x06, 0xb8, 0x07, 0x00, 0x00,
        0x00, 0x44, 0x8d, 0x48, 0xfb, 0x3b, 0xf0, 0x7c, 0x26, 0x33, 0xc9, 0x0f, 0xa2, 0x89, 0x04,
        0x24, 0x44, 0x8b, 0xdb, 0x89, 0x5c, 0x24, 0x04, 0x89, 0x4c, 0x24, 0x08, 0x89, 0x54, 0x24,
        0x0c, 0x0f, 0xba, 0xe3, 0x09, 0x73, 0x0a, 0x45, 0x0b, 0xc1, 0x44, 0x89, 0x05, 0x49, 0x23,
        0x0e, 0x06, 0xc7, 0x05, 0x5f, 0xde, 0xcb, 0x04, 0x01, 0x00, 0x00, 0x00, 0x44, 0x89, 0x0d,
        0x5c, 0xde, 0xcb, 0x04, 0x0f, 0xba, 0xe7, 0x14, 0x0f, 0x83, 0x91, 0x00, 0x00, 0x00, 0x44,
        0x89, 0x0d, 0x47, 0xde, 0xcb, 0x04, 0xbb, 0x06, 0x00, 0x00, 0x00, 0x89, 0x1d, 0x40, 0xde,
        0xcb, 0x04, 0x0f, 0xba, 0xe7, 0x1b, 0x73, 0x79, 0x0f, 0xba, 0xe7, 0x1c, 0x73, 0x73, 0x33,
        0xc9, 0x0f, 0x01, 0xd0, 0x48, 0xc1, 0xe2, 0x20, 0x48, 0x0b, 0xd0, 0x48, 0x89, 0x54, 0x24,
        0x20, 0x48, 0x8b, 0x44, 0x24, 0x20, 0x22, 0xc3, 0x3a, 0xc3, 0x75, 0x57, 0x8b, 0x05, 0x12,
        0xde, 0xcb, 0x04, 0x83, 0xc8, 0x08, 0xc7, 0x05, 0x01, 0xde, 0xcb, 0x04, 0x03, 0x00, 0x00,
        0x00, 0x89, 0x05, 0xff, 0xdd, 0xcb, 0x04, 0x41, 0xf6, 0xc3, 0x20, 0x74, 0x38, 0x83, 0xc8,
        0x20, 0xc7, 0x05, 0xe8, 0xdd, 0xcb, 0x04, 0x05, 0x00, 0x00, 0x00, 0x89, 0x05, 0xe6, 0xdd,
        0xcb, 0x04, 0xb8, 0x00, 0x00, 0x03, 0xd0, 0x44, 0x23, 0xd8, 0x44, 0x3b, 0xd8, 0x75, 0x18,
        0x48, 0x8b, 0x44, 0x24, 0x20, 0x24, 0xe0, 0x3c, 0xe0, 0x75, 0x0d, 0x83, 0x0d, 0xc7, 0xdd,
        0xcb, 0x04, 0x40, 0x89, 0x1d, 0xbd, 0xdd, 0xcb, 0x04, 0x48, 0x8b, 0x5c, 0x24, 0x28, 0x33,
        0xc0, 0x48, 0x8b, 0x74, 0x24, 0x30, 0x48, 0x83, 0xc4, 0x10, 0x5f, 0xc3, 0xcc, 0xcc, 0xcc,
    ];

    let out_code = lift_control_flow(&code, 0);

    match out_code {
        Ok(o) => {
            for x in o {
                let Ok(b) = lift_block(&x.1.code) else {
                    println!("Lifting failed");
                    continue;
                };

                println!("{:?}", print_instructions_simple(&b).unwrap());
            }
        }
        Err(e) => println!("{:x?}", e),
    }
}
