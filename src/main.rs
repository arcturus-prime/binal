use binal::ir::Block;
use binal::x86_64::lift;

const CODE: [u8; 115] = [
    0x48, 0x89, 0x5c, 0x24, 0x10, 0x48, 0x89, 0x74, 0x24, 0x18, 0x55, 0x57, 0x41, 0x56, 0x48, 0x8b,
    0xec, 0x48, 0x83, 0xec, 0x40, 0x48, 0x8b, 0xda, 0x48, 0x8d, 0xb9, 0xc8, 0x0a, 0x00, 0x00, 0x48,
    0x83, 0x3f, 0x00, 0x0f, 0x85, 0x18, 0x03, 0x00, 0x00, 0xb9, 0x08, 0x00, 0x00, 0x00, 0xe8, 0xcd,
    0x68, 0x55, 0x02, 0x48, 0x89, 0x45, 0x20, 0x45, 0x33, 0xf6, 0x48, 0x85, 0xc0, 0x74, 0x10, 0x48,
    0x8b, 0xd3, 0x48, 0x8b, 0xc8, 0xe8, 0xa6, 0x32, 0xb2, 0xfe, 0x48, 0x8b, 0xd8, 0xeb, 0x03, 0x49,
    0x8b, 0xde, 0x48, 0x8d, 0x45, 0x20, 0x48, 0x3b, 0xf8, 0x74, 0x18, 0x48, 0x8b, 0x37, 0x48, 0x89,
    0x1f, 0x48, 0x85, 0xf6, 0x74, 0x27, 0x48, 0x8b, 0xce, 0xe8, 0xc2, 0xd6, 0xaa, 0xfe, 0x48, 0x8b,
    0xce, 0xeb, 0x10,
];

pub fn main() -> () {
    let mut block = Block::new();

    lift(&mut block, &CODE);

    for (c, d) in block.iter() {
        println!("{:?} {:?}", c, d);
    }
}
